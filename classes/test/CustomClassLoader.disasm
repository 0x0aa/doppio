Compiled from "CustomClassLoader.java"
public class classes.test.CustomClassLoader extends java.lang.ClassLoader
  SourceFile: "CustomClassLoader.java"
  minor version: 0
  major version: 50
  Constant pool:
const #1 = Method	#49.#76;	//  java/lang/ClassLoader."<init>":()V
const #2 = Field	#77.#78;	//  java/lang/System.out:Ljava/io/PrintStream;
const #3 = class	#79;	//  java/lang/StringBuilder
const #4 = Method	#3.#76;	//  java/lang/StringBuilder."<init>":()V
const #5 = String	#80;	//  Loading class: 
const #6 = Method	#3.#81;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #7 = String	#82;	//  , resolve: 
const #8 = Method	#3.#83;	//  java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
const #9 = Method	#3.#84;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #10 = Method	#85.#86;	//  java/io/PrintStream.println:(Ljava/lang/String;)V
const #11 = Method	#34.#87;	//  classes/test/CustomClassLoader.findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
const #12 = String	#88;	//  Already loaded 
const #13 = Method	#89.#90;	//  java/lang/String.replace:(CC)Ljava/lang/String;
const #14 = String	#91;	//  .class
const #15 = Method	#34.#92;	//  classes/test/CustomClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
const #16 = class	#93;	//  java/io/ByteArrayOutputStream
const #17 = Method	#16.#76;	//  java/io/ByteArrayOutputStream."<init>":()V
const #18 = Method	#94.#95;	//  java/io/InputStream.read:([BII)I
const #19 = Method	#16.#96;	//  java/io/ByteArrayOutputStream.write:([BII)V
const #20 = Method	#16.#97;	//  java/io/ByteArrayOutputStream.toByteArray:()[B
const #21 = class	#98;	//  java/io/IOException
const #22 = String	#99;	//  ERROR loading class file: 
const #23 = Method	#3.#100;	//  java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
const #24 = class	#101;	//  java/lang/ClassNotFoundException
const #25 = String	#102;	//  Cannot load class: 
const #26 = Method	#24.#103;	//  java/lang/ClassNotFoundException."<init>":(Ljava/lang/String;)V
const #27 = Method	#34.#104;	//  classes/test/CustomClassLoader.defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
const #28 = Method	#34.#105;	//  classes/test/CustomClassLoader.resolveClass:(Ljava/lang/Class;)V
const #29 = String	#106;	//  ran defineClass with no issues
const #30 = class	#107;	//  java/lang/SecurityException
const #31 = String	#108;	//  Caught 
const #32 = Method	#49.#109;	//  java/lang/ClassLoader.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
const #33 = String	#110;	//  Called CustomClassLoader.foo
const #34 = class	#111;	//  classes/test/CustomClassLoader
const #35 = Method	#34.#76;	//  classes/test/CustomClassLoader."<init>":()V
const #36 = String	#112;	//  classes.test.CustomClassLoader
const #37 = Method	#45.#113;	//  java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
const #38 = String	#114;	//  Custom loaded class: 
const #39 = String	#115;	//  Class loaded through custom loader is 
const #40 = Method	#85.#116;	//  java/io/PrintStream.print:(Ljava/lang/String;)V
const #41 = Method	#47.#117;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #42 = String	#118;	//  NOT 
const #43 = String	#119;	//  the same as that loaded by System loader.
const #44 = String	#70;	//  foo
const #45 = class	#120;	//  java/lang/Class
const #46 = Method	#45.#121;	//  java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #47 = class	#122;	//  java/lang/Object
const #48 = Method	#123.#124;	//  java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #49 = class	#125;	//  java/lang/ClassLoader
const #50 = Asciz	BUFFER_SIZE;
const #51 = Asciz	I;
const #52 = Asciz	ConstantValue;
const #53 = int	8192;
const #54 = Asciz	<init>;
const #55 = Asciz	()V;
const #56 = Asciz	Code;
const #57 = Asciz	LineNumberTable;
const #58 = Asciz	loadClass;
const #59 = Asciz	(Ljava/lang/String;Z)Ljava/lang/Class;;
const #60 = Asciz	StackMapTable;
const #61 = class	#120;	//  java/lang/Class
const #62 = class	#111;	//  classes/test/CustomClassLoader
const #63 = class	#126;	//  java/lang/String
const #64 = class	#127;	//  "[B"
const #65 = class	#128;	//  java/io/InputStream
const #66 = class	#93;	//  java/io/ByteArrayOutputStream
const #67 = class	#98;	//  java/io/IOException
const #68 = class	#107;	//  java/lang/SecurityException
const #69 = Asciz	Exceptions;
const #70 = Asciz	foo;
const #71 = Asciz	main;
const #72 = Asciz	([Ljava/lang/String;)V;
const #73 = class	#129;	//  java/lang/Exception
const #74 = Asciz	SourceFile;
const #75 = Asciz	CustomClassLoader.java;
const #76 = NameAndType	#54:#55;//  "<init>":()V
const #77 = class	#130;	//  java/lang/System
const #78 = NameAndType	#131:#132;//  out:Ljava/io/PrintStream;
const #79 = Asciz	java/lang/StringBuilder;
const #80 = Asciz	Loading class: ;
const #81 = NameAndType	#133:#134;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #82 = Asciz	, resolve: ;
const #83 = NameAndType	#133:#135;//  append:(Z)Ljava/lang/StringBuilder;
const #84 = NameAndType	#136:#137;//  toString:()Ljava/lang/String;
const #85 = class	#138;	//  java/io/PrintStream
const #86 = NameAndType	#139:#140;//  println:(Ljava/lang/String;)V
const #87 = NameAndType	#141:#142;//  findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
const #88 = Asciz	Already loaded ;
const #89 = class	#126;	//  java/lang/String
const #90 = NameAndType	#143:#144;//  replace:(CC)Ljava/lang/String;
const #91 = Asciz	.class;
const #92 = NameAndType	#145:#146;//  getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
const #93 = Asciz	java/io/ByteArrayOutputStream;
const #94 = class	#128;	//  java/io/InputStream
const #95 = NameAndType	#147:#148;//  read:([BII)I
const #96 = NameAndType	#149:#150;//  write:([BII)V
const #97 = NameAndType	#151:#152;//  toByteArray:()[B
const #98 = Asciz	java/io/IOException;
const #99 = Asciz	ERROR loading class file: ;
const #100 = NameAndType	#133:#153;//  append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
const #101 = Asciz	java/lang/ClassNotFoundException;
const #102 = Asciz	Cannot load class: ;
const #103 = NameAndType	#54:#140;//  "<init>":(Ljava/lang/String;)V
const #104 = NameAndType	#154:#155;//  defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
const #105 = NameAndType	#156:#157;//  resolveClass:(Ljava/lang/Class;)V
const #106 = Asciz	ran defineClass with no issues;
const #107 = Asciz	java/lang/SecurityException;
const #108 = Asciz	Caught ;
const #109 = NameAndType	#58:#59;//  loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
const #110 = Asciz	Called CustomClassLoader.foo;
const #111 = Asciz	classes/test/CustomClassLoader;
const #112 = Asciz	classes.test.CustomClassLoader;
const #113 = NameAndType	#158:#159;//  forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
const #114 = Asciz	Custom loaded class: ;
const #115 = Asciz	Class loaded through custom loader is ;
const #116 = NameAndType	#160:#140;//  print:(Ljava/lang/String;)V
const #117 = NameAndType	#161:#162;//  equals:(Ljava/lang/Object;)Z
const #118 = Asciz	NOT ;
const #119 = Asciz	the same as that loaded by System loader.;
const #120 = Asciz	java/lang/Class;
const #121 = NameAndType	#163:#164;//  getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #122 = Asciz	java/lang/Object;
const #123 = class	#165;	//  java/lang/reflect/Method
const #124 = NameAndType	#166:#167;//  invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #125 = Asciz	java/lang/ClassLoader;
const #126 = Asciz	java/lang/String;
const #127 = Asciz	[B;
const #128 = Asciz	java/io/InputStream;
const #129 = Asciz	java/lang/Exception;
const #130 = Asciz	java/lang/System;
const #131 = Asciz	out;
const #132 = Asciz	Ljava/io/PrintStream;;
const #133 = Asciz	append;
const #134 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #135 = Asciz	(Z)Ljava/lang/StringBuilder;;
const #136 = Asciz	toString;
const #137 = Asciz	()Ljava/lang/String;;
const #138 = Asciz	java/io/PrintStream;
const #139 = Asciz	println;
const #140 = Asciz	(Ljava/lang/String;)V;
const #141 = Asciz	findLoadedClass;
const #142 = Asciz	(Ljava/lang/String;)Ljava/lang/Class;;
const #143 = Asciz	replace;
const #144 = Asciz	(CC)Ljava/lang/String;;
const #145 = Asciz	getResourceAsStream;
const #146 = Asciz	(Ljava/lang/String;)Ljava/io/InputStream;;
const #147 = Asciz	read;
const #148 = Asciz	([BII)I;
const #149 = Asciz	write;
const #150 = Asciz	([BII)V;
const #151 = Asciz	toByteArray;
const #152 = Asciz	()[B;
const #153 = Asciz	(Ljava/lang/Object;)Ljava/lang/StringBuilder;;
const #154 = Asciz	defineClass;
const #155 = Asciz	(Ljava/lang/String;[BII)Ljava/lang/Class;;
const #156 = Asciz	resolveClass;
const #157 = Asciz	(Ljava/lang/Class;)V;
const #158 = Asciz	forName;
const #159 = Asciz	(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;;
const #160 = Asciz	print;
const #161 = Asciz	equals;
const #162 = Asciz	(Ljava/lang/Object;)Z;
const #163 = Asciz	getMethod;
const #164 = Asciz	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;;
const #165 = Asciz	java/lang/reflect/Method;
const #166 = Asciz	invoke;
const #167 = Asciz	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;

{
private static final int BUFFER_SIZE;
  Constant value: int 8192

public classes.test.CustomClassLoader();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/ClassLoader."<init>":()V
   4:	return
  LineNumberTable: 
   line 5: 0


protected synchronized java.lang.Class loadClass(java.lang.String, boolean)   throws java.lang.ClassNotFoundException;
  Code:
   Stack=5, Locals=10, Args_size=3
   0:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	new	#3; //class java/lang/StringBuilder
   6:	dup
   7:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   10:	ldc	#5; //String Loading class: 
   12:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   15:	aload_1
   16:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   19:	ldc	#7; //String , resolve: 
   21:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   24:	iload_2
   25:	invokevirtual	#8; //Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
   28:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   31:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   34:	aload_0
   35:	aload_1
   36:	invokevirtual	#11; //Method findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
   39:	astore_3
   40:	aload_3
   41:	ifnull	71
   44:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   47:	new	#3; //class java/lang/StringBuilder
   50:	dup
   51:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   54:	ldc	#12; //String Already loaded 
   56:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   59:	aload_1
   60:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   63:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   66:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   69:	aload_3
   70:	areturn
   71:	new	#3; //class java/lang/StringBuilder
   74:	dup
   75:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   78:	aload_1
   79:	bipush	46
   81:	bipush	47
   83:	invokevirtual	#13; //Method java/lang/String.replace:(CC)Ljava/lang/String;
   86:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   89:	ldc	#14; //String .class
   91:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   94:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   97:	astore	4
   99:	aconst_null
   100:	astore	5
   102:	aload_0
   103:	aload	4
   105:	invokevirtual	#15; //Method getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
   108:	astore	6
   110:	sipush	8192
   113:	newarray byte
   115:	astore	7
   117:	new	#16; //class java/io/ByteArrayOutputStream
   120:	dup
   121:	invokespecial	#17; //Method java/io/ByteArrayOutputStream."<init>":()V
   124:	astore	8
   126:	iconst_m1
   127:	istore	9
   129:	aload	6
   131:	aload	7
   133:	iconst_0
   134:	sipush	8192
   137:	invokevirtual	#18; //Method java/io/InputStream.read:([BII)I
   140:	dup
   141:	istore	9
   143:	iconst_m1
   144:	if_icmpeq	160
   147:	aload	8
   149:	aload	7
   151:	iconst_0
   152:	iload	9
   154:	invokevirtual	#19; //Method java/io/ByteArrayOutputStream.write:([BII)V
   157:	goto	129
   160:	aload	8
   162:	invokevirtual	#20; //Method java/io/ByteArrayOutputStream.toByteArray:()[B
   165:	astore	5
   167:	goto	198
   170:	astore	6
   172:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   175:	new	#3; //class java/lang/StringBuilder
   178:	dup
   179:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   182:	ldc	#22; //String ERROR loading class file: 
   184:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   187:	aload	6
   189:	invokevirtual	#23; //Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   192:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   195:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   198:	aload	5
   200:	ifnonnull	230
   203:	new	#24; //class java/lang/ClassNotFoundException
   206:	dup
   207:	new	#3; //class java/lang/StringBuilder
   210:	dup
   211:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   214:	ldc	#25; //String Cannot load class: 
   216:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   219:	aload_1
   220:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   223:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   226:	invokespecial	#26; //Method java/lang/ClassNotFoundException."<init>":(Ljava/lang/String;)V
   229:	athrow
   230:	aload_0
   231:	aload_1
   232:	aload	5
   234:	iconst_0
   235:	aload	5
   237:	arraylength
   238:	invokevirtual	#27; //Method defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
   241:	astore_3
   242:	iload_2
   243:	ifeq	251
   246:	aload_0
   247:	aload_3
   248:	invokevirtual	#28; //Method resolveClass:(Ljava/lang/Class;)V
   251:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   254:	ldc	#29; //String ran defineClass with no issues
   256:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   259:	goto	297
   262:	astore	6
   264:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   267:	new	#3; //class java/lang/StringBuilder
   270:	dup
   271:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   274:	ldc	#31; //String Caught 
   276:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   279:	aload	6
   281:	invokevirtual	#23; //Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   284:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   287:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   290:	aload_0
   291:	aload_1
   292:	iload_2
   293:	invokespecial	#32; //Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
   296:	astore_3
   297:	aload_3
   298:	areturn
  Exception table:
   from   to  target type
   102   167   170   Class java/io/IOException

   230   259   262   Class java/lang/SecurityException

  LineNumberTable: 
   line 9: 0
   line 12: 34
   line 13: 40
   line 14: 44
   line 15: 69
   line 19: 71
   line 22: 99
   line 24: 102
   line 25: 110
   line 26: 117
   line 27: 126
   line 28: 129
   line 29: 147
   line 31: 160
   line 35: 167
   line 33: 170
   line 34: 172
   line 37: 198
   line 38: 203
   line 43: 230
   line 44: 242
   line 45: 246
   line 47: 251
   line 51: 259
   line 48: 262
   line 49: 264
   line 50: 290
   line 52: 297

  StackMapTable: number_of_entries = 9
   frame_type = 252 /* append */
     offset_delta = 71
     locals = [ class java/lang/Class ]
   frame_type = 255 /* full_frame */
     offset_delta = 57
     locals = [ class classes/test/CustomClassLoader, class java/lang/String, int, class java/lang/Class, class java/lang/String, class "[B", class java/io/InputStream, class "[B", class java/io/ByteArrayOutputStream, int ]
     stack = []
   frame_type = 30 /* same */
   frame_type = 255 /* full_frame */
     offset_delta = 9
     locals = [ class classes/test/CustomClassLoader, class java/lang/String, int, class java/lang/Class, class java/lang/String, class "[B" ]
     stack = [ class java/io/IOException ]
   frame_type = 27 /* same */
   frame_type = 31 /* same */
   frame_type = 20 /* same */
   frame_type = 74 /* same_locals_1_stack_item */
     stack = [ class java/lang/SecurityException ]
   frame_type = 34 /* same */

  Exceptions: 
   throws java.lang.ClassNotFoundException
public static void foo();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	ldc	#33; //String Called CustomClassLoader.foo
   5:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   8:	return
  LineNumberTable: 
   line 56: 0
   line 57: 8


public static void main(java.lang.String[])   throws java.lang.Exception;
  Code:
   Stack=3, Locals=4, Args_size=1
   0:	new	#34; //class classes/test/CustomClassLoader
   3:	dup
   4:	invokespecial	#35; //Method "<init>":()V
   7:	astore_1
   8:	ldc	#36; //String classes.test.CustomClassLoader
   10:	iconst_1
   11:	aload_1
   12:	invokestatic	#37; //Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
   15:	astore_2
   16:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   19:	new	#3; //class java/lang/StringBuilder
   22:	dup
   23:	invokespecial	#4; //Method java/lang/StringBuilder."<init>":()V
   26:	ldc	#38; //String Custom loaded class: 
   28:	invokevirtual	#6; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   31:	aload_2
   32:	invokevirtual	#23; //Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   35:	invokevirtual	#9; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   38:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   41:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   44:	ldc	#39; //String Class loaded through custom loader is 
   46:	invokevirtual	#40; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   49:	ldc_w	#34; //class classes/test/CustomClassLoader
   52:	aload_2
   53:	invokevirtual	#41; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   56:	ifne	67
   59:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   62:	ldc	#42; //String NOT 
   64:	invokevirtual	#40; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   67:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   70:	ldc	#43; //String the same as that loaded by System loader.
   72:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   75:	aload_2
   76:	ldc	#44; //String foo
   78:	iconst_0
   79:	anewarray	#45; //class java/lang/Class
   82:	invokevirtual	#46; //Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   85:	astore_3
   86:	aload_3
   87:	aconst_null
   88:	iconst_0
   89:	anewarray	#47; //class java/lang/Object
   92:	invokevirtual	#48; //Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   95:	pop
   96:	return
  LineNumberTable: 
   line 60: 0
   line 62: 8
   line 63: 16
   line 65: 41
   line 66: 49
   line 67: 59
   line 69: 67
   line 71: 75
   line 72: 86
   line 73: 96

  StackMapTable: number_of_entries = 1
   frame_type = 253 /* append */
     offset_delta = 67
     locals = [ class classes/test/CustomClassLoader, class java/lang/Class ]

  Exceptions: 
   throws java.lang.Exception
}

