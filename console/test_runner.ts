// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";
  var argv, makefile_test, optimist, print, regular_test, run_tests;

  print = require('util').print;

  run_tests = require('../src/testing').run_tests;

  makefile_test = function(argv) {
    var done_cb, failpath, fs, outfile, path, stdout;

    path = require('path');
    fs = require('fs');
    failpath = path.resolve(__dirname, '../classes/test/failures.txt');
    done_cb = function(failed) {
      print((failed ? '✗' : '✓'));
      if (failed) {
        fs.writeSync(outfile, '\n');
      }
      return fs.closeSync(outfile);
    };
    outfile = fs.openSync(failpath, 'a');
    stdout = function(str) {
      return fs.writeSync(outfile, str);
    };
    return run_tests(argv._, stdout, false, true, argv.c, done_cb);
  };

  regular_test = function(argv) {
    var done_cb;

    done_cb = function(failed) {
      return process.exit(failed);
    };
    return run_tests(argv._, print, !argv.diff, argv.q, argv.c, done_cb);
  };

  if ((typeof module !== "undefined" && module !== null) && (typeof require !== "undefined" && require !== null ? require.main : void 0) === module) {
    optimist = require('optimist').boolean(['q', 'h', 'c', 'makefile', 'diff'])["default"]({
      diff: true
    }).alias({
      h: 'help',
      q: 'quiet',
      c: 'continue'
    }).describe({
      q: 'Suppress in-progress test output',
      diff: 'Show failed test diff output',
      c: 'Keep going after test failure',
      h: 'Show this usage'
    }).usage('Usage: $0 path/to/test [flags]');
    argv = optimist.argv;
    if (argv.help) {
      return optimist.showHelp();
    }
    if (argv.makefile) {
      makefile_test(argv);
    } else {
      regular_test(argv);
    }
  }

}).call(this);
